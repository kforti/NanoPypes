albacore:
    task: shell
    data_type: single_read_fast5
    data_input_path: "USER_INPUT"
    data_save_path: "../pipeline_run/{pipeline_id}/albacore"
    commands:
        basecall:
            read_fast5_basecaller.py: ""
            --input: "{input}"
            --save_path: "{save_path}"
            --flowcell: FLO-MIN106
            --kit: SQK-LSK109
            --output_format: fastq
            --worker_threads: "1"
            --reads_per_fastq: "1000"
            command_order: ["read_fast5_basecaller.py"]
minimap2:
    task: shell
    data_type: fastq
    data_input_path: ""
    references: ""
    data_save_path: "../pipeline_run/{pipeline_id}/minimap2"
    commands:
        splice-map:
            minimap2: "-ax splice {reference} {read}"
            -o: "{save_path}"
            command_order: ["minimap2"]
samtools:
    task: shell
    data_type: sam_bam
    data_input_path: ""
    data_save_path: "../pipeline_run/{pipeline_id}/samtools"
    commands:
        sam_to_bam:
            samtools: "view -b -S -o {bam} {sam}"
        sort_bam:
            samtools: "sort {bam} -o {sorted_bam}"
        index_bam:
            samtools: "index {sorted_bam} {bam_index}"
bcftools:
    task: shell
    data_type: bcf_vcf
    references: ""
    data_input_path: ""
    data_save_path:  "../pipeline_run/{pipeline_id}/bcftools"
    commands:
        pileup:
            bcftools: "mpileup -Ob -f {reference} {sorted_bam}"
            -o: "{bcf}"
            command_order: ["bcftools"]
        variant_call:
            bcftools: "call -c -v {bcf}"
            -o: "{vcf}"
            command_order: ["bcftools"]
porechop:
    task: shell
    data_type: fastq


