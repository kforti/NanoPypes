albacore:
    task_kwargs: {}
    task_type: shell
    image_path: ""
    commands:
        basecall:
            template: "read_fast5_basecaller.py --input {input} --save_path {save_path} --flowcell {flowcell} --kit {kit} --output_format fastq --worker_threads 1 --reads_per_fastq 1000"
            user_input: ['flowcell', 'kit']
            meta:
                data_type: []
minimap2:
    task_kwargs: {}
    task_type: shell
    image_path: ""
    commands:
        splice-map:
            template: "minimap2 -ax splice {reference} {read} -o {save_path}"
            user_input: ['reference']
samtools:
    task_kwargs: {}
    task_type: shell
    image_path: ""
    commands:
        sam_to_bam:
            template: "echo {save} {input}" #samtools view -b -S -o
        sort_bam:
            template: "samtools sort {input} -o {save}"
        index_bam:
            template: "samtools index {input} {save}"
        merge_bams:
            template: "echo {save} {input}" #samtools merge
bcftools:
    task_kwargs: {}
    task_type: shell
    image_path: ""
    commands:
        pileup:
            template: "bcftools mpileup -Ob -f {reference} {sorted_bam} -o {bcf}"
            user_input: ['reference']
        variant_call:
            template: "bcftools call -c -v {bcf} -o {vcf}"
porechop:
    task_kwargs: {}
    task_type: shell
    image_path: ""
    commands:
        demultiplex:
            template: "porechop -i {input} -b {save}"
            user_input: []
nanoplot:
    task_kwargs: {}
    task_type: shell
    image_path: ""
    commands:
        demultiplex:
            template: "NanoPlot -i {input} -o {save}"
            user_input: []




